--- libunwind/src/x86/Gos-linux.c	2015-08-03 19:24:10.000000000 +0300
+++ patches/Gos-linux.c	2015-08-05 05:34:22.000000000 +0300
@@ -283,7 +283,9 @@
 x86_local_resume (unw_addr_space_t as, unw_cursor_t *cursor, void *arg)
 {
   struct cursor *c = (struct cursor *) cursor;
+#if !defined(__ANDROID__)
   ucontext_t *uc = c->uc;
+#endif
 
   /* Ensure c->pi is up-to-date.  On x86, it's relatively common to be
      missing DWARF unwind info.  We don't want to fail in that case,
@@ -296,12 +298,16 @@
       struct sigcontext *sc = (struct sigcontext *) c->sigcontext_addr;
 
       Debug (8, "resuming at ip=%x via sigreturn(%p)\n", c->dwarf.ip, sc);
+#if !defined(__ANDROID__)
       sigreturn (sc);
+#endif
     }
   else
     {
       Debug (8, "resuming at ip=%x via setcontext()\n", c->dwarf.ip);
+#if !defined(__ANDROID__)
       setcontext (uc);
+#endif
     }
   return -UNW_EINVAL;
 }
